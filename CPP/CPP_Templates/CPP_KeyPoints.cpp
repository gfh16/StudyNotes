
                       用以记录C++语言中的重要概念

1. 数据类型
   (1)系统根据变量的数据类型，来分配内存和决定在内存中存储什么
   (2) 字节bit:0 或 1； 字节byte: 1 Byte = 8bit = 0 ...255

2. 变量
   (1)变量实际上是程序可操作的存储区的名称。

3. 常量
   (1)C++中两种方法定义常量：
      <1> #define 预处理器
      <2> const 关键字
   (2)注意：将常量定义为大写字母形式，是一个良好的编程习惯。

4. C++ 存储类
   (1)C++程序中的储存类：auto, register, static, extern, mutable, thread_local(C++11)
   (2)重点学习 auto, static, extern
      <1> auto: 两种用法，一是变量声明时根据初始化表达式自动腿短该变量的类型；二是在声明函数时作为函数返回值的占位符
                *** 使用auto关键字的变量必须初始化

      <2> static:
          a. 第一条也是最重要的一条：隐藏。
             当同时编译多个文件时，所有未加static前缀的全局变量和函数都具有全局可见性。利用这一特性，可以在不同的文件中定义
             同名函数和同名变量，而不必担心命名冲突。

      <3> extern
          a. 用于提供一个全局变量的引用，全局变量对所有程序文件都是可见的。

5. C++ 循环语句
   (1) 循环类型：while循环， for循环， do...while循环， 以及嵌套循环
   (2) 循环控制语句：
       <1> break语句： 终止循环，程序接着执行下一条语句
       <2> continue语句：跳过循环主体的剩余部分，立即重新开始测试条件
   (3) 无限循环：for(;;)语句

6. C++判断语句
   (1) if语句：
   (2) if...else语句:
   (3) switch:
       <1> switch语句的么一个case标签必须是一个单独值，这个值必须是整数或char，无法处理浮点运算。
   (4) ?:运算符： Exp1 ? Exp2 : Exp3;  // 如果Exp1为真，则计算Exp2的值；反之，则计算Exp3的值
       可以用if...else语句代替

7. 函数
   (1) 在函数的声明中，参数的名称并不重要，只有参数的类型是必须的。
       如：int max(int num1, int num2); int max(int, int); 都是有效的
   (2) 如果在函数需要在另一个文件中被调用，则函数声明是必须的。且应该在调用函数的文件顶部声明函数。
   (3) 调用函数时，向函数传递参数的方式：
       <1> 传值调用：把参数实际值复制给函数的形参。修改函数内的形参对实际参数无影响。
       <2> 指针调用：把参数的地址复制给形参。修改形参会影响实际值。
       <3> 引用调用：把参数的引用复制给形参。修改形参会影响实际参数。

8. 随机数

9. C++数组
   (1) 多维数组
   (2) 指向数组的指针
   (3) 传递数组给函数
   (4) 从函数返回数组


10. 字符串
  (1) char
  (2) string类


11. 指针
   (1) 指针的定义：指针是一个变量，它的值是另一个变量的地址。指针是一个用数值表示的地址。
   (2) 指针变量声明的一般形式：type *var-name;
       type: 指针的基类型
       var-name：指针变量的名称
       * : 用来指定一个变量是指针
   (3) 所有指针的值的实际数据类型，都是一样的，都是一个代表内存地址地址的十六进制数
   (4) 使用指针的操作：定义一个指针变量、把变量地址赋值给指针、访问指针变量中可用地址的值
   (5) 关于指针：指针指向谁，谁就把地址赋给指针

   <1> 空指针：NULL 与 nullptr
       a. NULL指针是一个定义在标准库中的的值为零的常量
       b. 按照惯例，如果指针包含空值(零值),则假定它不指向任何东西
       c. NULL的本质：实际是宏定义，define NULL 0；
       d.  NULL 在函数重载时会出问题，需要引入关键字nullptr来解决；nullptr在C++11中就是代表空指针

   <2> 指针的运算
       a. 指针的运算包括：++， --， +， -
       b. 我们喜欢在程序中使用指针代替数组，因为变量指针可以递增，而数组不能递增。

   <3> 指针与数组
       a.数组指针
       b.指针数组

   <4> 指向指针的指针(多级间接寻址)



12. 引用
    (1) 引用与指针：
        a. 不存在空引用。引用必须连接到一块合法的内存
        b. 一旦引用被初始化为一个对象，就不能被指向到另一个对象。指针可以在任何时候指向到另一个对象。
        c. 引用必须在创建时被初始化。指针可以在任何时间被初始化。
        d. 有多级指针，没有多级引用
        e. 引用比指针用起来更加安全

    (2) C++中关于引用的两个用法：
       <1> 把引用作为参数
       <2> 把引用作为返回值

    (3) 对一个数据建立"引用"，其作用是为一个变量起一个别名

    (4) 引用的本质：引用的本质是指针。

    (5) 编译器不会为引用变量重新开辟内存空间，而是变量和它的引用公用一块空间。但引用本身占4字节，因为引用本质上是指针。



13. 时间与日期 -- C标准库-<time.h>
    定义了：4个变量类型、两个宏、各种操作时间与日期的函数

    (1)库变量：size_t, clock_t, time_t is, struct tm
    (2)库宏：NULL, CLOCKS_PER_SEC
    (3)库函数：9个

14. C++基本输入输出
    (1)I/O库头文件：<iostream>, <iomanip>, <fstream>


15. 数据结构
   (1) 数据结构允许储存不同类型的数据项
   (2) typedef关键字
   (3) strcpy 函数
